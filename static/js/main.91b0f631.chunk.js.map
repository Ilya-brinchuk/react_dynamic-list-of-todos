{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api.js","App.jsx","index.js"],"names":["TodoList","state","filteredTodos","props","todos","status","query","filterTodos","event","target","name","value","setState","filtTodos","filter","todo","title","includes","toLowerCase","completed","className","onChange","this","hidden","map","key","id","type","readOnly","checked","onClick","setUser","userId","React","Component","CurrentUser","user","clearSelectedUser","email","phone","API_URL","App","users","selectedUserId","a","fetch","then","response","json","result","data","todosFromServer","usersFromServer","currentUser","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91b0f631.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    filteredTodos: this.props.todos,\n    status: '',\n    query: '',\n  }\n\n  filterTodos = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n    let filtTodos = this.props.todos;\n\n    filtTodos = filtTodos\n      .filter(todo => (todo.title.includes(this.state.query.toLowerCase())));\n    if (value === 'active') {\n      filtTodos = this.props.todos.filter(todo => todo.completed === false);\n    }\n\n    if (value === 'completed') {\n      filtTodos = this.props.todos.filter(todo => todo.completed === true);\n    }\n\n    this.setState({ filteredTodos: filtTodos });\n  }\n\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <form>\n          <input\n            onChange={this.filterTodos}\n            value={this.state.query}\n            name=\"query\"\n          />\n          <select\n            onChange={this.filterTodos}\n            value={this.state.status}\n            name=\"status\"\n          >\n            <option hidden>Choose a status</option>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </form>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n\n            {this.state.filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item\n                  ${todo.completed\n                  ? 'TodoList__item--unchecked'\n                  : 'TodoList__item--checked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={`TodoList__user-button button\n                    ${todo.completed\n                    ? 'TodoList__user-button--selected'\n                    : ''}`}\n                  type=\"button\"\n                  onClick={() => this.props.setUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user, clearSelectedUser }) => (\n  <div className=\"CurrentUser\">\n\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:\n        {user.id}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n    <button\n      className=\"CurrentUser__clear\"\n      type=\"submit\"\n      onClick={clearSelectedUser}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n  clearSelectedUser: PropTypes.func.isRequired,\n};\n","const API_URL = `https://mate-api.herokuapp.com`;\n\nexport function getTodos() {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(result => result.filter(todo => todo.title !== null));\n}\n\nexport function getUsers() {\n  return fetch(`${API_URL}/users`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getTodos();\n    const usersFromServer = await getUsers();\n\n    this.setState({\n      todos: todosFromServer,\n      users: usersFromServer,\n    });\n  }\n\n  setUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId, users } = this.state;\n    let currentUser = [];\n\n    if (selectedUserId !== 0) {\n      currentUser = users.find(user => user.id === selectedUserId);\n    }\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"App__sidebar\">\n\n          <TodoList todos={todos} filter={this.filter} setUser={this.setUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                user={currentUser}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}